size	QRgen/private/DrawedQRCode/print.html#size.t	print: size(): uint8	
printTerminal	QRgen/private/DrawedQRCode/print.html#printTerminal,DrawedQRCode	print: printTerminal(self: DrawedQRCode)	
svgHeader	QRgen/private/DrawedQRCode/print.html#svgHeader	print: svgHeader	
svgEnd	QRgen/private/DrawedQRCode/print.html#svgEnd	print: svgEnd	
modulePath	QRgen/private/DrawedQRCode/print.html#modulePath	print: modulePath	
modulePathStart	QRgen/private/DrawedQRCode/print.html#modulePathStart	print: modulePathStart	
modulePathEnd	QRgen/private/DrawedQRCode/print.html#modulePathEnd	print: modulePathEnd	
moduleRect	QRgen/private/DrawedQRCode/print.html#moduleRect	print: moduleRect	
alignmentPatternRect	QRgen/private/DrawedQRCode/print.html#alignmentPatternRect	print: alignmentPatternRect	
Percentage	QRgen/private/DrawedQRCode/print.html#Percentage	print: Percentage	
Separation	QRgen/private/DrawedQRCode/print.html#Separation	print: Separation	
toBool	QRgen/private/DrawedQRCode/print.html#toBool.c,Percentage	print: toBool(self: Percentage): bool	
printSvg	QRgen/private/DrawedQRCode/print.html#printSvg,DrawedQRCode,string,string,Percentage,Percentage,Separation,string,string,bool	print: printSvg(self: DrawedQRCode; light = &quot;#ffffff&quot;; dark = &quot;#000000&quot;;\n         alRad: Percentage = 0; moRad: Percentage = 0; moSep: Separation = 0.1;\n         class: string = &quot;qrCode&quot;; id: string = &quot;&quot;; forceUseRect: bool = false): string	
